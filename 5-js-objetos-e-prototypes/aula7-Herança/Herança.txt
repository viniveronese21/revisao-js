O termo "Herança" é muito usado para descrever que as 
caracteristicas de um objeto são passadas para outro objeto. Assim
como uma filha ou filho pode herdar caracteristicas da mãe ou pai
(geneticamente). Por isso estamos usando o termo para 
descrever o comportamento desejado. Além disso, a maioria das 
literaturas, incluindo as documentações(como MDN) citam a palavra herança.

Vamos continuar usando o termo "Herança" até o fim do curso,
porem, JavaScript não é uma linguagem que apresenta essa
caracteristica em especifico, portanbto não existe HERANÇA aqui. O
que ocorre, na verdade, é DELEGAÇÂO. Esse seria o termo mais correto
para descrever HERANÇA em JavaScript

Quando fazemos algo como:

function Produto(nome, preco) {
  this.nome = nome;
  this.preco = preco;
}
 
Produto.prototype.aumento = function (quantia) {
  this.preco += quantia;
};
 
function Camiseta(nome, preco, cor) {
  Produto.call(this, nome, preco);
  this.cor = cor;
}
Camiseta.prototype = Object.create(Produto.prototype);
Camiseta.prototype.constructor = Camiseta;

Mais especificamente no trecho:

Camiseta.prototype.constructor = Camiseta;

Estamos, claramente, falando que o 'Camisetas.prototype' é um novo 
objeto vazio que tem como prototipo 'Produto.prototype'. Dessa 
forma, estamos adicionando 'Camisetas.prototype'na cadeia de 
prototipos de 'Produto'. Por consequencia, tudo que não existir em 
'Camisetas' nem em 'Camisetas.prototype' será delegado para 
'Produto.prototype' (e assim por diante até chegar no topo da cadeia de prototipos).
Por isso vejo o termo delegação como mais adequado para este comportamento 

Novamente, vamos continuar usanto o termo HERANÇA, nas achei 
que seria interessante que vc soubesse disto neste momento.